{"version":3,"sources":["assets/images/tyler-circle.png","components/FeaturedCarousel/index.js","components/Login/index.js","components/PlayCard/index.js","utils/firebase.js","components/PlayPagination/index.js","components/RecentPlays/index.js","components/About/index.js","pages/Homepage/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FeaturedCarousel","react_default","a","createElement","className","Carousel","interval","indicators","Item","lib_default","style","margin","width","url","playsinline","Login","PlayCard","props","Card","player","playType","champ","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","PlayPagination","_ref","playsPerPage","totalPlays","paginate","pageNumbers","i","Math","ceil","push","Pagination","map","number","onClick","RecentPlays","_useState","useState","_useState2","Object","slicedToArray","plays","setPlays","_useState3","_useState4","loading","_useState5","_useState6","currentPage","setCurrentPage","_useState7","database","ref","indexOfLastPlay","indexOfFirstPlay","currentPlays","slice","useEffect","orderByChild","on","snapshot","items","console","log","forEach","snap","val","reverse","color","ListGroup","play","key","id","ListGroupItem","components_PlayCard","ChampionPlayed","VideoURL","Summoner","PlayType","components_PlayPagination","length","pageNumber","About","Container","Row","Col","src","logo","alt","Homepage","components_About","components_RecentPlays","App","Navbar","fontSize","components_FeaturedCarousel","pages_Homepage","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9f28cb8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tyler-circle.94e3b8fb.png\";","import React from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport ReactPlayer from \"react-player\";\r\nimport './style.css';\r\n\r\nfunction FeaturedCarousel() {\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"featuredPlays\">Featured Plays of the Game!</h2>\r\n            <Carousel className=\"FeaturedCarousel\" interval={null} indicators={false}>\r\n                <Carousel.Item className=\"featuredCarouselPlay\">\r\n                    <ReactPlayer \r\n                        style={{margin: \"auto\", width: \"100%\"}}\r\n                        url=\"https://vimeo.com/559811687\"\r\n                        playsinline={true}\r\n                    />\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <ReactPlayer \r\n                        style={{margin: \"auto\", width: \"100%\"}}\r\n                        url=\"https://vimeo.com/559851440\"\r\n                        playsinline={true}\r\n                    />\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <ReactPlayer \r\n                        style={{margin: \"auto\", width: \"100%\"}}\r\n                        url=\"https://vimeo.com/559302602\"\r\n                        playsinline={true}\r\n                    />\r\n                </Carousel.Item>\r\n            </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeaturedCarousel;","import React from 'react';\r\nimport { Card, Row, Form, Button } from 'react-bootstrap';\r\nimport './style.css'\r\n\r\nfunction Login() {\r\n    return (\r\n        <div>\r\n            <Row className=\"inputRow\">\r\n                <Card className=\"inputCard\">\r\n                    <h3 className=\"mt-2\">Login</h3>\r\n                    <Form className='m-3'>\r\n                        <Form.Group controlId='formBasicEmail'>\r\n                            <Form.Label>Email Adress</Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder='Email'\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='formBasicPassword'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type='password'\r\n                                placeholder='Password'\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Button variant='primary' type='submit'>\r\n                            Login\r\n              </Button>\r\n                    </Form>\r\n                </Card>\r\n            </Row>\r\n            <Row className=\"inputRow\">\r\n                <Card className=\"inputCard\">\r\n                    <h3 className=\"mt-2\">Create Account</h3>\r\n                    <Form className='m-3'>\r\n                        <Form.Group controlId='formBasicName'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Name'\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='formSummonerName'>\r\n                            <Form.Label>Summoner Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Summoner Name'\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='formBasicEmail'>\r\n                            <Form.Label>Email Adress</Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder='Email'\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='formBasicPassword'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type='password'\r\n                                placeholder='Password'\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Button variant='primary' type='submit'>\r\n                            Sign Up\r\n              </Button>\r\n                    </Form>\r\n                </Card>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport ReactPlayer from \"react-player\";\r\nimport './style.css'\r\n\r\nfunction PlayCard(props) {\r\n    return (\r\n        <Card className=\"playCard p-2\">\r\n            <h3>{props.player} {props.playType} as {props.champ}</h3>\r\n            <div className=\"playerWrapper\">\r\n                <ReactPlayer className='reactPlayer'\r\n                    url={props.url}\r\n                    playsinline={true}\r\n                />\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PlayCard;","import firebase from \"firebase\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_APP_MEASUREMENT_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React from 'react';\r\nimport Pagination from 'react-bootstrap/Pagination';\r\nimport './style.css';\r\n\r\nconst PlayPagination = ({ playsPerPage, totalPlays, paginate }) => {\r\n    const pageNumbers = [];\r\n\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPlays / playsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n\r\n    return (\r\n        <Pagination className=\"paginationStyle\">\r\n            {pageNumbers.map(number => (\r\n                <Pagination.Item onClick={() => paginate(number)}>\r\n                    {number}\r\n                </Pagination.Item>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default PlayPagination;","import React, { useState, useEffect } from 'react';\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap';\r\nimport PlayCard from '../PlayCard';\r\nimport firebase from '../../utils/firebase';\r\nimport PlayPagination from '../PlayPagination';\r\nimport './style.css';\r\nimport Search from '../Search';\r\n\r\nfunction RecentPlays() {\r\n    const [plays, setPlays] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [playsPerPage] = useState(5);\r\n\r\n// orderByChild(\"Time\").\r\n\r\n    const ref = firebase.database().ref(\"sickplays\");\r\n\r\n    function getPlays() {\r\n        firebase.database().ref(\"sickplays\").orderByChild(\"Time\").on('value', snapshot => {\r\n            let items = [];\r\n            console.log(items)\r\n            snapshot.forEach(snap => {\r\n                items.push(snap.val());\r\n                items.reverse();\r\n            })\r\n            setPlays(items);\r\n        }\r\n        )\r\n    }\r\n\r\n    //Get current plays\r\n    const indexOfLastPlay = currentPage * playsPerPage;\r\n    const indexOfFirstPlay = indexOfLastPlay - playsPerPage;\r\n    const currentPlays = plays.slice(indexOfFirstPlay, indexOfLastPlay)\r\n\r\n    useEffect(() => {\r\n        getPlays();\r\n    }, []);\r\n\r\n    //Change page\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    if (loading) {\r\n        return <h1>Loading...</h1>\r\n    }\r\n\r\n    return (\r\n        <Card className=\"categoryCard\">\r\n            <h2 style={{ color: \"white\" }}>Recent Plays</h2>\r\n            <ListGroup className=\"playList\">\r\n                {currentPlays.map((play) => (\r\n                    <div key={play.id}>\r\n                        <ListGroupItem className=\"listItems\">\r\n                            <PlayCard\r\n                                champ={play.ChampionPlayed}\r\n                                url={play.VideoURL}\r\n                                player={play.Summoner}\r\n                                playType={play.PlayType}\r\n                            />\r\n                        </ListGroupItem>\r\n                    </div>\r\n                ))}\r\n            </ListGroup>\r\n            <PlayPagination\r\n                playsPerPage={playsPerPage}\r\n                totalPlays={plays.length}\r\n                paginate={paginate}\r\n            />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default RecentPlays;\r\n","import React from 'react';\r\nimport { Container, Card, Row, Col } from 'react-bootstrap';\r\nimport logo from '../../assets/images/tyler-circle.png'\r\nimport './style.css';\r\n\r\nfunction About() {\r\n    return (\r\n        <Container className=\"aboutContainer\">\r\n            <Row className=\"inputRow\">\r\n                <Col>\r\n                    <Row>\r\n                        <h2 style={{ margin: 'auto', color: 'white' }}>About AutoPOGBot</h2>\r\n                    </Row>\r\n                    <Row>\r\n                        <Card style={{ margin: 'auto'}} className=\"pt-3 inputCard\">\r\n                            <img src={logo} className=\"App-logo m-auto\" alt=\"logo\" />\r\n                            <br></br>\r\n                            <p>AutoPOGBot was created by Tyler Ostby to capture all of your Triple, Quadra, and Pentakills. Once you set AutoPOGBot to monitor your game,\r\n                                they'll tune in and push any of your multikills up to Vimeo.\r\n                            </p>\r\n                        </Card>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { Col, Row, Container } from 'react-bootstrap';\r\nimport Login from '../../components/Login';\r\nimport RecentPlays from '../../components/RecentPlays';\r\nimport About from '../../components/About';\r\nimport './style.css';\r\n\r\nfunction Homepage() {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <About className=\"mt-5\"/>\r\n            </Row>\r\n            <Row className=\"mt-5\">\r\n                <Col className=\"col-12\">\r\n                    <RecentPlays />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Homepage;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport FeaturedCarousel from './components/FeaturedCarousel';\nimport Homepage from './pages/Homepage';\nimport { Navbar, } from 'react-bootstrap/';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar className=\"customNavbar\">\n          <h1 className=\"m-auto\" style={{fontSize: \"72px\",}}>AutoPOGBot</h1>\n          <br></br>\n          {/* <p className=\"m-auto\">Eef Freef</p>          */}\n        </Navbar>\n        <FeaturedCarousel className=\"mb-5\"/>\n        <br></br>\n        <Homepage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}